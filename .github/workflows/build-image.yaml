name: Image Build
on:
  workflow_call:

jobs:
  build-image:
    name: Build and push Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            digiblink/alpine-nginx-php-fpm
            ghcr.io/digiblink/alpine-nginx-php-fpm
          tags: |
            type=sha
            type=ref,event=tag
            type=raw,value=latest,enable={{is_default_branch}}
          flavor: |
            latest=auto
            prefix=,onlatest=false
            suffix=
          labels: |
            org.opencontainers.image.vendor=digiBlink
            org.opencontainers.image.source=https://github.com/${{ env.REPO_NAME }}
            org.opencontainers.image.title=Alpine based image with latest PHP 8.4 FPM and Nginx
            org.opencontainers.image.description=Alpine based image with latest PHP 8.4 FPM and Nginx
            org.opencontainers.image.created=${{ steps.time.outputs.time }}
            org.opencontainers.image.revision=${{ steps.short-sha.outputs.sha }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DH_USER }}
          password: ${{ secrets.DH_PAT }}

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image and push to GitHub Container Registry
        uses: docker/build-push-action@v6
        with:
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
